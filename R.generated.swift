//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle

  let reuseIdentifier = reuseIdentifier()

  var color: color { .init(bundle: bundle) }
  var image: image { .init(bundle: bundle) }
  var file: file { .init(bundle: bundle) }
  var nib: nib { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func file(bundle: Foundation.Bundle) -> file {
    .init(bundle: bundle)
  }
  func nib(bundle: Foundation.Bundle) -> nib {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.nib.validate()
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.color` struct is generated, and contains static references to 4 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: RswiftResources.ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }

    /// Color `DetailedButtonColor`.
    var detailedButtonColor: RswiftResources.ColorResource { .init(name: "DetailedButtonColor", path: [], bundle: bundle) }

    /// Color `cyan100`.
    var cyan100: RswiftResources.ColorResource { .init(name: "cyan100", path: [], bundle: bundle) }

    /// Color `cyan50`.
    var cyan50: RswiftResources.ColorResource { .init(name: "cyan50", path: [], bundle: bundle) }
  }

  /// This `_R.image` struct is generated, and contains static references to 99 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `Image`.
    var image: RswiftResources.ImageResource { .init(name: "Image", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Instagram_logo_white`.
    var instagram_logo_white: RswiftResources.ImageResource { .init(name: "Instagram_logo_white", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `People`.
    var people: RswiftResources.ImageResource { .init(name: "People", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `bookmark`.
    var bookmark: RswiftResources.ImageResource { .init(name: "bookmark", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `bookmarkfill`.
    var bookmarkfill: RswiftResources.ImageResource { .init(name: "bookmarkfill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `cam_flip`.
    var cam_flip: RswiftResources.ImageResource { .init(name: "cam_flip", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `cam_takephoto`.
    var cam_takephoto: RswiftResources.ImageResource { .init(name: "cam_takephoto", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `cameraadd`.
    var cameraadd: RswiftResources.ImageResource { .init(name: "cameraadd", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `cancel`.
    var cancel: RswiftResources.ImageResource { .init(name: "cancel", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `cancel_shadow`.
    var cancel_shadow: RswiftResources.ImageResource { .init(name: "cancel_shadow", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `chaticon`.
    var chaticon: RswiftResources.ImageResource { .init(name: "chaticon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `chatoutline`.
    var chatoutline: RswiftResources.ImageResource { .init(name: "chatoutline", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `checkmark_empty`.
    var checkmark_empty: RswiftResources.ImageResource { .init(name: "checkmark_empty", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `checkmark_selected`.
    var checkmark_selected: RswiftResources.ImageResource { .init(name: "checkmark_selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `collection-placeholder`.
    var collectionPlaceholder: RswiftResources.ImageResource { .init(name: "collection-placeholder", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `collectionicon`.
    var collectionicon: RswiftResources.ImageResource { .init(name: "collectionicon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `collectioniconfill`.
    var collectioniconfill: RswiftResources.ImageResource { .init(name: "collectioniconfill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `color.icon`.
    var colorIcon: RswiftResources.ImageResource { .init(name: "color.icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `comment`.
    var comment: RswiftResources.ImageResource { .init(name: "comment", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `customarrowback`.
    var customarrowback: RswiftResources.ImageResource { .init(name: "customarrowback", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `down_arrow`.
    var down_arrow: RswiftResources.ImageResource { .init(name: "down_arrow", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `dust.icon`.
    var dustIcon: RswiftResources.ImageResource { .init(name: "dust.icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `fi_send`.
    var fi_send: RswiftResources.ImageResource { .init(name: "fi_send", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `filters.icon`.
    var filtersIcon: RswiftResources.ImageResource { .init(name: "filters.icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `fire`.
    var fire: RswiftResources.ImageResource { .init(name: "fire", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `flash`.
    var flash: RswiftResources.ImageResource { .init(name: "flash", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `flashOutline`.
    var flashOutline: RswiftResources.ImageResource { .init(name: "flashOutline", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `flashauto`.
    var flashauto: RswiftResources.ImageResource { .init(name: "flashauto", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `flipCamera`.
    var flipCamera: RswiftResources.ImageResource { .init(name: "flipCamera", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `focus`.
    var focus: RswiftResources.ImageResource { .init(name: "focus", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `galaicon`.
    var galaicon: RswiftResources.ImageResource { .init(name: "galaicon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `galamain`.
    var galamain: RswiftResources.ImageResource { .init(name: "galamain", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `gear`.
    var gear: RswiftResources.ImageResource { .init(name: "gear", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `googleicon`.
    var googleicon: RswiftResources.ImageResource { .init(name: "googleicon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `grain.icon`.
    var grainIcon: RswiftResources.ImageResource { .init(name: "grain.icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `grid`.
    var grid: RswiftResources.ImageResource { .init(name: "grid", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `heart`.
    var heart: RswiftResources.ImageResource { .init(name: "heart", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `heartfill`.
    var heartfill: RswiftResources.ImageResource { .init(name: "heartfill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `home_selected`.
    var home_selected: RswiftResources.ImageResource { .init(name: "home_selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `home_unselected`.
    var home_unselected: RswiftResources.ImageResource { .init(name: "home_unselected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `homeicon1`.
    var homeicon1: RswiftResources.ImageResource { .init(name: "homeicon1", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `homeicon1-selected`.
    var homeicon1Selected: RswiftResources.ImageResource { .init(name: "homeicon1-selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `homeicon1-selected-1`.
    var homeicon1Selected1: RswiftResources.ImageResource { .init(name: "homeicon1-selected-1", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `instagram-2`.
    var instagram2: RswiftResources.ImageResource { .init(name: "instagram-2", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `lab-placeholder`.
    var labPlaceholder: RswiftResources.ImageResource { .init(name: "lab-placeholder", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `labCellPlaceholder`.
    var labCellPlaceholder: RswiftResources.ImageResource { .init(name: "labCellPlaceholder", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `leaks.icon`.
    var leaksIcon: RswiftResources.ImageResource { .init(name: "leaks.icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `like_selected`.
    var like_selected: RswiftResources.ImageResource { .init(name: "like_selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `like_unselected`.
    var like_unselected: RswiftResources.ImageResource { .init(name: "like_unselected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `list`.
    var list: RswiftResources.ImageResource { .init(name: "list", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `menuicon`.
    var menuicon: RswiftResources.ImageResource { .init(name: "menuicon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `newwarbleappicon`.
    var newwarbleappicon: RswiftResources.ImageResource { .init(name: "newwarbleappicon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `notificationbell`.
    var notificationbell: RswiftResources.ImageResource { .init(name: "notificationbell", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `notificationbell-selected`.
    var notificationbellSelected: RswiftResources.ImageResource { .init(name: "notificationbell-selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `onboarding`.
    var onboarding: RswiftResources.ImageResource { .init(name: "onboarding", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `personicon`.
    var personicon: RswiftResources.ImageResource { .init(name: "personicon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `personicon-selected`.
    var personiconSelected: RswiftResources.ImageResource { .init(name: "personicon-selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `photoicon`.
    var photoicon: RswiftResources.ImageResource { .init(name: "photoicon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `photoiconfill`.
    var photoiconfill: RswiftResources.ImageResource { .init(name: "photoiconfill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `picto`.
    var picto: RswiftResources.ImageResource { .init(name: "picto", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `picto_emptybackground`.
    var picto_emptybackground: RswiftResources.ImageResource { .init(name: "picto_emptybackground", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pinterest-2`.
    var pinterest2: RswiftResources.ImageResource { .init(name: "pinterest-2", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `play`.
    var play: RswiftResources.ImageResource { .init(name: "play", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `plus_photo`.
    var plus_photo: RswiftResources.ImageResource { .init(name: "plus_photo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `plus_unselected`.
    var plus_unselected: RswiftResources.ImageResource { .init(name: "plus_unselected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `press`.
    var press: RswiftResources.ImageResource { .init(name: "press", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `profile_selected`.
    var profile_selected: RswiftResources.ImageResource { .init(name: "profile_selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `profile_unselected`.
    var profile_unselected: RswiftResources.ImageResource { .init(name: "profile_unselected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `profileicon`.
    var profileicon: RswiftResources.ImageResource { .init(name: "profileicon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `profileicon-selected`.
    var profileiconSelected: RswiftResources.ImageResource { .init(name: "profileicon-selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ribbon`.
    var ribbon: RswiftResources.ImageResource { .init(name: "ribbon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `right_arrow_shadow`.
    var right_arrow_shadow: RswiftResources.ImageResource { .init(name: "right_arrow_shadow", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `risearrow`.
    var risearrow: RswiftResources.ImageResource { .init(name: "risearrow", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `rot`.
    var rot: RswiftResources.ImageResource { .init(name: "rot", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `save_shadow`.
    var save_shadow: RswiftResources.ImageResource { .init(name: "save_shadow", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `search_selected`.
    var search_selected: RswiftResources.ImageResource { .init(name: "search_selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `search_unselected`.
    var search_unselected: RswiftResources.ImageResource { .init(name: "search_unselected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `searchicon`.
    var searchicon: RswiftResources.ImageResource { .init(name: "searchicon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `searchicon-selected`.
    var searchiconSelected: RswiftResources.ImageResource { .init(name: "searchicon-selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `send2`.
    var send2: RswiftResources.ImageResource { .init(name: "send2", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `sendicon`.
    var sendicon: RswiftResources.ImageResource { .init(name: "sendicon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `smileyface`.
    var smileyface: RswiftResources.ImageResource { .init(name: "smileyface", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `smileyicon`.
    var smileyicon: RswiftResources.ImageResource { .init(name: "smileyicon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `snapchat-2`.
    var snapchat2: RswiftResources.ImageResource { .init(name: "snapchat-2", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `starfill`.
    var starfill: RswiftResources.ImageResource { .init(name: "starfill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `staricon`.
    var staricon: RswiftResources.ImageResource { .init(name: "staricon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tik-tok-2`.
    var tikTok2: RswiftResources.ImageResource { .init(name: "tik-tok-2", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `timer.icon`.
    var timerIcon: RswiftResources.ImageResource { .init(name: "timer.icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `timer3.icon`.
    var timer3Icon: RswiftResources.ImageResource { .init(name: "timer3.icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `timer5.icon`.
    var timer5Icon: RswiftResources.ImageResource { .init(name: "timer5.icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `twitter-2`.
    var twitter2: RswiftResources.ImageResource { .init(name: "twitter-2", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `upload_image_icon`.
    var upload_image_icon: RswiftResources.ImageResource { .init(name: "upload_image_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `usertags`.
    var usertags: RswiftResources.ImageResource { .init(name: "usertags", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `venom-7`.
    var venom7: RswiftResources.ImageResource { .init(name: "venom-7", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `videoicon`.
    var videoicon: RswiftResources.ImageResource { .init(name: "videoicon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `videoiconselected`.
    var videoiconselected: RswiftResources.ImageResource { .init(name: "videoiconselected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `volumeofficon`.
    var volumeofficon: RswiftResources.ImageResource { .init(name: "volumeofficon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `volumeonicon`.
    var volumeonicon: RswiftResources.ImageResource { .init(name: "volumeonicon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `youtube-2`.
    var youtube2: RswiftResources.ImageResource { .init(name: "youtube-2", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.file` struct is generated, and contains static references to 2 resource files.
  struct file {
    let bundle: Foundation.Bundle

    /// Resource file `GoogleService-Info.plist`.
    var googleServiceInfoPlist: RswiftResources.FileResource { .init(name: "GoogleService-Info", pathExtension: "plist", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `SupabaseManager`.
    var supabaseManager: RswiftResources.FileResource { .init(name: "SupabaseManager", pathExtension: "", bundle: bundle, locale: LocaleReference.none) }
  }

  /// This `_R.nib` struct is generated, and contains static references to 2 nibs.
  struct nib {
    let bundle: Foundation.Bundle

    /// Nib `CardCollectionViewCell`.
    var cardCollectionViewCell: RswiftResources.NibReferenceReuseIdentifier<CardCollectionViewCell, CardCollectionViewCell> { .init(name: "CardCollectionViewCell", bundle: bundle, identifier: "CardCollectionViewCell") }

    /// Nib `JHSpinnerView`.
    var jhSpinnerView: RswiftResources.NibReference<JHSpinnerView> { .init(name: "JHSpinnerView", bundle: bundle) }

    func validate() throws {
      if UIKit.UIImage(named: "chaticon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'chaticon' is used in nib 'CardCollectionViewCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "heartfill", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'heartfill' is used in nib 'CardCollectionViewCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "volumeon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'volumeon' is used in nib 'CardCollectionViewCell', but couldn't be loaded.") }
    }
  }

  /// This `_R.reuseIdentifier` struct is generated, and contains static references to 10 reuse identifiers.
  struct reuseIdentifier {

    /// Reuse identifier `CardCollectionViewCell`.
    let cardCollectionViewCell: RswiftResources.ReuseIdentifier<CardCollectionViewCell> = .init(identifier: "CardCollectionViewCell")

    /// Reuse identifier `CategoryCell`.
    let categoryCell: RswiftResources.ReuseIdentifier<CategoryCell> = .init(identifier: "CategoryCell")

    /// Reuse identifier `LocationCell`.
    let locationCell: RswiftResources.ReuseIdentifier<LocationCell> = .init(identifier: "LocationCell")

    /// Reuse identifier `NotificationTableViewCell`.
    let notificationTableViewCell: RswiftResources.ReuseIdentifier<NotificationTableViewCell> = .init(identifier: "NotificationTableViewCell")

    /// Reuse identifier `PostCommentTableViewCell`.
    let postCommentTableViewCell: RswiftResources.ReuseIdentifier<PostCommentTableViewCell> = .init(identifier: "PostCommentTableViewCell")

    /// Reuse identifier `ReceiverMessageCell`.
    let receiverMessageCell: RswiftResources.ReuseIdentifier<ReceiverMessageCell> = .init(identifier: "ReceiverMessageCell")

    /// Reuse identifier `RelatedPostCell`.
    let relatedPostCell: RswiftResources.ReuseIdentifier<RelatedPostCell> = .init(identifier: "RelatedPostCell")

    /// Reuse identifier `RelatedPostsTableViewCell`.
    let relatedPostsTableViewCell: RswiftResources.ReuseIdentifier<RelatedPostsTableViewCell> = .init(identifier: "RelatedPostsTableViewCell")

    /// Reuse identifier `SenderMessageCell`.
    let senderMessageCell: RswiftResources.ReuseIdentifier<SenderMessageCell> = .init(identifier: "SenderMessageCell")

    /// Reuse identifier `UserFollowerCell`.
    let userFollowerCell: RswiftResources.ReuseIdentifier<UserFollowerCell> = .init(identifier: "UserFollowerCell")
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 9 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var discover: discover { .init(bundle: bundle) }
    var dismissBar: dismissBar { .init(bundle: bundle) }
    var home: home { .init(bundle: bundle) }
    var launchScreen: launchScreen { .init(bundle: bundle) }
    var login: login { .init(bundle: bundle) }
    var main: main { .init(bundle: bundle) }
    var notifications: notifications { .init(bundle: bundle) }
    var post: post { .init(bundle: bundle) }
    var userProfile: userProfile { .init(bundle: bundle) }

    func discover(bundle: Foundation.Bundle) -> discover {
      .init(bundle: bundle)
    }
    func dismissBar(bundle: Foundation.Bundle) -> dismissBar {
      .init(bundle: bundle)
    }
    func home(bundle: Foundation.Bundle) -> home {
      .init(bundle: bundle)
    }
    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func login(bundle: Foundation.Bundle) -> login {
      .init(bundle: bundle)
    }
    func main(bundle: Foundation.Bundle) -> main {
      .init(bundle: bundle)
    }
    func notifications(bundle: Foundation.Bundle) -> notifications {
      .init(bundle: bundle)
    }
    func post(bundle: Foundation.Bundle) -> post {
      .init(bundle: bundle)
    }
    func userProfile(bundle: Foundation.Bundle) -> userProfile {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.discover.validate()
      try self.dismissBar.validate()
      try self.home.validate()
      try self.launchScreen.validate()
      try self.login.validate()
      try self.main.validate()
      try self.notifications.validate()
      try self.post.validate()
      try self.userProfile.validate()
    }


    /// Storyboard `Discover`.
    struct discover: RswiftResources.StoryboardReference {
      let bundle: Foundation.Bundle

      let name = "Discover"

      var categoryViewController: RswiftResources.StoryboardViewControllerIdentifier<CategoryViewController> { .init(identifier: "CategoryViewController", storyboard: name, bundle: bundle) }
      var discoverViewController: RswiftResources.StoryboardViewControllerIdentifier<DiscoverViewController> { .init(identifier: "DiscoverViewController", storyboard: name, bundle: bundle) }

      func validate() throws {
        if UIKit.UIImage(named: "fire", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'fire' is used in storyboard 'Discover', but couldn't be loaded.") }
        if UIKit.UIImage(named: "videoicon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'videoicon' is used in storyboard 'Discover', but couldn't be loaded.") }
        if categoryViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'categoryViewController' could not be loaded from storyboard 'Discover' as 'CategoryViewController'.") }
        if discoverViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'discoverViewController' could not be loaded from storyboard 'Discover' as 'DiscoverViewController'.") }
      }
    }

    /// Storyboard `DismissBar`.
    struct dismissBar: RswiftResources.StoryboardReference {
      let bundle: Foundation.Bundle

      let name = "DismissBar"

      var dismissBarViewController: RswiftResources.StoryboardViewControllerIdentifier<DismissBarViewController> { .init(identifier: "DismissBarViewController", storyboard: name, bundle: bundle) }

      func validate() throws {
        if dismissBarViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'dismissBarViewController' could not be loaded from storyboard 'DismissBar' as 'DismissBarViewController'.") }
      }
    }

    /// Storyboard `Home`.
    struct home: RswiftResources.StoryboardReference {
      let bundle: Foundation.Bundle

      let name = "Home"

      var homeTestViewController: RswiftResources.StoryboardViewControllerIdentifier<HomeTestViewController> { .init(identifier: "HomeTestViewController", storyboard: name, bundle: bundle) }
      var postCategoryViewController: RswiftResources.StoryboardViewControllerIdentifier<PostCategoryViewController> { .init(identifier: "PostCategoryViewController", storyboard: name, bundle: bundle) }
      var postLocationViewController: RswiftResources.StoryboardViewControllerIdentifier<PostLocationViewController> { .init(identifier: "PostLocationViewController", storyboard: name, bundle: bundle) }
      var postUploadViewController: RswiftResources.StoryboardViewControllerIdentifier<PostUploadViewController> { .init(identifier: "PostUploadViewController", storyboard: name, bundle: bundle) }

      func validate() throws {
        if UIKit.UIImage(named: "arrow", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'arrow' is used in storyboard 'Home', but couldn't be loaded.") }
        if #available(iOS 13.0, *) { if UIKit.UIImage(systemName: "mappin.and.ellipse") == nil { throw RswiftResources.ValidationError("[R.swift] System image named 'mappin.and.ellipse' is used in storyboard 'Home', but couldn't be loaded.") } }
        if #available(iOS 13.0, *) { if UIKit.UIImage(systemName: "tag") == nil { throw RswiftResources.ValidationError("[R.swift] System image named 'tag' is used in storyboard 'Home', but couldn't be loaded.") } }
        if homeTestViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'homeTestViewController' could not be loaded from storyboard 'Home' as 'HomeTestViewController'.") }
        if postCategoryViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'postCategoryViewController' could not be loaded from storyboard 'Home' as 'PostCategoryViewController'.") }
        if postLocationViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'postLocationViewController' could not be loaded from storyboard 'Home' as 'PostLocationViewController'.") }
        if postUploadViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'postUploadViewController' could not be loaded from storyboard 'Home' as 'PostUploadViewController'.") }
      }
    }

    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {
        if UIKit.UIImage(named: "picto", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'picto' is used in storyboard 'LaunchScreen', but couldn't be loaded.") }
      }
    }

    /// Storyboard `Login`.
    struct login: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = BaseNC

      let bundle: Foundation.Bundle

      let name = "Login"

      var loginViewController: RswiftResources.StoryboardViewControllerIdentifier<LoginViewController> { .init(identifier: "LoginViewController", storyboard: name, bundle: bundle) }
      var registerProfileViewController: RswiftResources.StoryboardViewControllerIdentifier<RegisterProfileViewController> { .init(identifier: "RegisterProfileViewController", storyboard: name, bundle: bundle) }
      var registerViewController: RswiftResources.StoryboardViewControllerIdentifier<RegisterViewController> { .init(identifier: "RegisterViewController", storyboard: name, bundle: bundle) }
      var welcomeViewController: RswiftResources.StoryboardViewControllerIdentifier<WelcomeViewController> { .init(identifier: "WelcomeViewController", storyboard: name, bundle: bundle) }

      func validate() throws {
        if #available(iOS 13.0, *) { if UIKit.UIImage(systemName: "applelogo") == nil { throw RswiftResources.ValidationError("[R.swift] System image named 'applelogo' is used in storyboard 'Login', but couldn't be loaded.") } }
        if UIKit.UIImage(named: "googleicon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'googleicon' is used in storyboard 'Login', but couldn't be loaded.") }
        if loginViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'loginViewController' could not be loaded from storyboard 'Login' as 'LoginViewController'.") }
        if registerProfileViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'registerProfileViewController' could not be loaded from storyboard 'Login' as 'RegisterProfileViewController'.") }
        if registerViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'registerViewController' could not be loaded from storyboard 'Login' as 'RegisterViewController'.") }
        if welcomeViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'welcomeViewController' could not be loaded from storyboard 'Login' as 'WelcomeViewController'.") }
      }
    }

    /// Storyboard `Main`.
    struct main: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = ViewController

      let bundle: Foundation.Bundle

      let name = "Main"
      func validate() throws {

      }
    }

    /// Storyboard `Notifications`.
    struct notifications: RswiftResources.StoryboardReference {
      let bundle: Foundation.Bundle

      let name = "Notifications"

      var conversationViewController: RswiftResources.StoryboardViewControllerIdentifier<ConversationViewController> { .init(identifier: "ConversationViewController", storyboard: name, bundle: bundle) }
      var conversationsViewController: RswiftResources.StoryboardViewControllerIdentifier<ConversationsViewController> { .init(identifier: "ConversationsViewController", storyboard: name, bundle: bundle) }
      var userNotificationsViewController: RswiftResources.StoryboardViewControllerIdentifier<UserNotificationsViewController> { .init(identifier: "UserNotificationsViewController", storyboard: name, bundle: bundle) }

      func validate() throws {
        if conversationViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'conversationViewController' could not be loaded from storyboard 'Notifications' as 'ConversationViewController'.") }
        if conversationsViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'conversationsViewController' could not be loaded from storyboard 'Notifications' as 'ConversationsViewController'.") }
        if userNotificationsViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'userNotificationsViewController' could not be loaded from storyboard 'Notifications' as 'UserNotificationsViewController'.") }
      }
    }

    /// Storyboard `Post`.
    struct post: RswiftResources.StoryboardReference {
      let bundle: Foundation.Bundle

      let name = "Post"

      var postCommentViewController: RswiftResources.StoryboardViewControllerIdentifier<PostCommentViewController> { .init(identifier: "PostCommentViewController", storyboard: name, bundle: bundle) }
      var postPageViewController: RswiftResources.StoryboardViewControllerIdentifier<PostPageViewController> { .init(identifier: "PostPageViewController", storyboard: name, bundle: bundle) }

      func validate() throws {
        if #available(iOS 13.0, *) { if UIKit.UIImage(systemName: "heart") == nil { throw RswiftResources.ValidationError("[R.swift] System image named 'heart' is used in storyboard 'Post', but couldn't be loaded.") } }
        if #available(iOS 13.0, *) { if UIKit.UIImage(systemName: "heart.fill") == nil { throw RswiftResources.ValidationError("[R.swift] System image named 'heart.fill' is used in storyboard 'Post', but couldn't be loaded.") } }
        if #available(iOS 13.0, *) { if UIKit.UIImage(systemName: "message.fill") == nil { throw RswiftResources.ValidationError("[R.swift] System image named 'message.fill' is used in storyboard 'Post', but couldn't be loaded.") } }
        if UIKit.UIImage(named: "videoicon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'videoicon' is used in storyboard 'Post', but couldn't be loaded.") }
        if UIKit.UIImage(named: "volumeon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'volumeon' is used in storyboard 'Post', but couldn't be loaded.") }
        if postCommentViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'postCommentViewController' could not be loaded from storyboard 'Post' as 'PostCommentViewController'.") }
        if postPageViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'postPageViewController' could not be loaded from storyboard 'Post' as 'PostPageViewController'.") }
      }
    }

    /// Storyboard `UserProfile`.
    struct userProfile: RswiftResources.StoryboardReference {
      let bundle: Foundation.Bundle

      let name = "UserProfile"

      var editProfileViewController: RswiftResources.StoryboardViewControllerIdentifier<EditProfileViewController> { .init(identifier: "EditProfileViewController", storyboard: name, bundle: bundle) }
      var userFollowersViewController: RswiftResources.StoryboardViewControllerIdentifier<UserFollowersViewController> { .init(identifier: "UserFollowersViewController", storyboard: name, bundle: bundle) }
      var userProfileViewController: RswiftResources.StoryboardViewControllerIdentifier<UserProfileViewController> { .init(identifier: "UserProfileViewController", storyboard: name, bundle: bundle) }

      func validate() throws {
        if UIKit.UIImage(named: "videoicon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'videoicon' is used in storyboard 'UserProfile', but couldn't be loaded.") }
        if editProfileViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'editProfileViewController' could not be loaded from storyboard 'UserProfile' as 'EditProfileViewController'.") }
        if userFollowersViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'userFollowersViewController' could not be loaded from storyboard 'UserProfile' as 'UserFollowersViewController'.") }
        if userProfileViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'userProfileViewController' could not be loaded from storyboard 'UserProfile' as 'UserProfileViewController'.") }
      }
    }
  }
}